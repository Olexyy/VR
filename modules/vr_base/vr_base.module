<?php

use \Drupal\Core\Form\FormStateInterface;

function vr_base_form_vr_hotspot_base_hotspot_form_alter (&$form, FormStateInterface $form_state) {
  $arg = $form_state->get('vr_view');
  if(vr_base_form_has_args($form_state)) {
    $form['field_pitch']['widget'][0]['value']['#default_value'] = $form_state->get('pitch');
    $form['field_yaw']['widget'][0]['value']['#default_value'] = $form_state->get('yaw');
    $form['actions']['submit']['#submit'][] = "vr_base_additional_submit";
  }
}

function vr_base_additional_submit(array &$form, FormStateInterface $form_state) {
  $storage = \Drupal::service('entity.manager')->getStorage('vr_view');
  $parent_entity = $storage->load($form_state->get('vr_view'));
  $parent_entity->field_vr_hotspots->value[]= $form_state->getFormObject()->getEntity();
  $parent_entity->save($parent_entity);
}

function vr_base_form_has_args(FormStateInterface $formState) {
  return $formState->has('vr_view') && $formState->has('yaw') && $formState->has('pitch');
}



function vr_base_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $a = 1;
  if (isset($form['type']) && $form['type']['#value'] . '_node_settings' == $form_id) {
    $upload_enabled_types = \Drupal::config('mymodule.settings')->get('upload_enabled_types');
    $form['workflow']['upload_' . $form['type']['#value']] = array(
      '#type' => 'radios',
      '#title' => t('Attachments'),
      '#default_value' => in_array($form['type']['#value'], $upload_enabled_types) ? 1 : 0,
      '#options' => array(t('Disabled'), t('Enabled')),
    );
    // Add a custom submit handler to save the array of types back to the config file.
    $form['actions']['submit']['#submit'][] = 'mymodule_upload_enabled_types_submit';
  }
}
